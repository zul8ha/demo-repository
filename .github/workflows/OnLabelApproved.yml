name: Approve fork PR workflows on label

on:
  # pull_request_review:
  #   types: [submitted]
  pull_request_target:
    types: [labeled]
permissions:
  actions: write
  pull-requests: read
  contents: read
env:
  GH_TOKEN: ${{ secrets.READ_ORG_TOKEN }}
  ORG: 'zul8ha'

jobs:
  approved:
    if: github.event.label.name == 'approved'
    runs-on: ubuntu-latest
    steps:
    - name: Check actor is org member
      id: orgcheck
      run: |
          # exit on error, unset vars are erros, show error message from pipe
          set -euo pipefail

          response=$(curl -sS \
          -H "Authorization: Bearer ${GH_TOKEN}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/orgs/${ORG}/memberships/${GITHUB_ACTOR})

          state=$(jq -r '.state // empty' <<< "$response")
          if [ "$state" != "active" ]; then
              echo "Not an org member (or token lacks read:org)"; exit 1
          fi
  trigger-rerun:
    needs: 
      - approved
    runs-on: ubuntu-latest
    env:
      REPO: 'duckdb/duckdb'
      PR: ${{ github.event.pull_request.number }}
    steps:
      - name: Approve all waiting runs for this PR
        run: |
          set -euo pipefail

          PR_SHA=$(gh pr view "${PR}" -repo "${REPO}" --json headRefOid - q .headRefOid)
          
          # list waiting runs for PR
          RUN_IDS=$(
            gh api -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${REPO}/actions/runs?event=pull_request&per_page=100" --paginate \
            | jq -r --arg sha "$PR_SHA" '
              .workflow_runs[]
              | select(.head_sha == $sha and (.head_repository.fork == true))
              | .id
            '
          )
          if [ -n "${RUN_IDS:-}" ]; then
            while read -r RUN_ID; do
              [ -z "$RUN_ID:-" ] && continue
              echo "Approving run $RUN_ID"
              gh api -X POST -H "X-GitHub-Api-Version: 2022-11-28" \
                "repos/${REPO}/actions/runs/${RUN_ID}/approve" \
              || echo "Skip ${RUN_ID}: already approved or not awaiting approval anymore"
            done <<< "$RUN_IDS"
          fi
